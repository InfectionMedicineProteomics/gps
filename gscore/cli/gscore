#!/usr/bin/env python3
import argparse

from gscore.workflows import (
    build_scorer,
    score_run,
    build_global_model
)
from gscore.utils.logger import Logger

from gscore import export

from gscore.cli import (
    build_scoring_model_args,
    score_run_args,
    export_args,
    build_global_model_args
)


def get_args():

    base_parser = argparse.ArgumentParser()
    
    subparsers = base_parser.add_subparsers(
        dest='tool_name'
    )

    build_scoring_model_parser = subparsers.add_parser(
        'buildscorer',
        help='build scorer help'
    )

    build_scoring_model_args.parse_args(
        build_scoring_model_parser
    )

    score_run_parser = subparsers.add_parser(
        'scorerun',
        help='score individual run'
    )

    score_run_args.parse_args(
        score_run_parser
    )

    build_global_model_parser = subparsers.add_parser(
        'buildglobalmodel',
        help='Build global scoring model based on the peptide or protein level'
    )

    build_global_model_args.parse_args(
        build_global_model_parser
    )

    export_parser = subparsers.add_parser(
        'export',
        help='Export SQLite to tsv'
    )

    export_args.parse_args(
        export_parser
    )

    args = base_parser.parse_args()

    return args


if __name__ == '__main__':
    
    args = get_args()

    if args.tool_name == 'buildscorer':

        logger = Logger(
            name="build_scorer",
            level=args.verbosity_level
        )

        build_scorer.main(args, logger)

    elif args.tool_name == 'scorerun':

        logger = Logger(
            name="score_run",
            level=args.verbosity_level
        )

        score_run.main(args, logger)

    elif args.tool_name == 'export':

        logger = Logger(
            name='export',
            level=args.verbosity_level
        )

        export.main(args, logger)

    elif args.tool_name == 'buildglobalmodel':

        build_global_model.main(args)
